* Day 1: Loading Data, Normalization, Unsupervised Analysis
| R               | Python            | Notes                               |
|-----------------+-------------------+-------------------------------------|
| LoadData.R      | LoadData.py       |                                     |
| NormalizeData.R | NormalizedData.py | RLE- and mean-center-normalization  |
| Clustering.R    | Clustering.py     | k-means and hierarchical clustering |

* Day 2: knn classification, overfitting, cross-validation, feature selection
| R            | Python        | Notes                                                  |
|--------------+---------------+--------------------------------------------------------|
| PCA_intro.R  |               |                                                        |
| PCA.R        | PCA.py        |                                                        |
| KnnSim.R     | KnnSim.py     | compare resub vs. test performance on simulated data   |
| KnnSimCV.R   | KnnSimCV.py   | show cross-validation (cv) removes resub bias          |
| BadFeatSel.R | BadFeatSel.py | supervised feature selection must be done under cv     |
| KnnGrid.R    | KnnGrid.py    | compare cv acc for varying k parameter on real data    |
| KnnReal.R    | KnnReal.py    | t-test feature selection/extraction + knn on real data |

* Day 3: linear models, regularization, naive bayes
| R                          | Python                      | Notes                       |
|----------------------------+-----------------------------+-----------------------------|
| TTesting.R                 | TTesting.py                 |                             |
| PredictingGeneExpression.R | PredictionGeneExpression.py |                             |
| WhyRegularize.R            | WhyRegularize.py            |                             |
| LogisticReal.R             | LogisticReal.py             |                             |
| LdaIsLikeLogistic.R        |                             |                             |
  
* Day 4: svm, bootstrap, trees, random forests, boosting
| R                    | Python                | Notes                                        |
|----------------------+-----------------------+----------------------------------------------|
| SvmReal.R            | SvmReal.py            |                                              |
| bootstrap_examples.R |                       | mostly taken from package bootstrap examples |
| KnnSimBoot.R         |                       |                                              |
| RandomForestReal.R   | RandomForestReal.py   |                                              |
| AdaBoostReal.R       | AdaBoostReal.py       |                                              |
| CompareModelStrats.R | CompareModelStrats.py |                                              |
